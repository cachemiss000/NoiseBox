# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from commandserver import media_server_pb2 as mediarpc_dot_media__server__pb2


class MediaControlServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Play = channel.unary_unary(
                '/commandserver.MediaControlService/Play',
                request_serializer=mediarpc_dot_media__server__pb2.PlayRequest.SerializeToString,
                response_deserializer=mediarpc_dot_media__server__pb2.PlayResponse.FromString,
                )
        self.Pause = channel.unary_unary(
                '/commandserver.MediaControlService/Pause',
                request_serializer=mediarpc_dot_media__server__pb2.PauseRequest.SerializeToString,
                response_deserializer=mediarpc_dot_media__server__pb2.PauseResponse.FromString,
                )
        self.NextSong = channel.unary_unary(
                '/commandserver.MediaControlService/NextSong',
                request_serializer=mediarpc_dot_media__server__pb2.NextSongRequest.SerializeToString,
                response_deserializer=mediarpc_dot_media__server__pb2.NextSongResponse.FromString,
                )
        self.ListSongs = channel.unary_unary(
                '/commandserver.MediaControlService/ListSongs',
                request_serializer=mediarpc_dot_media__server__pb2.ListSongsRequest.SerializeToString,
                response_deserializer=mediarpc_dot_media__server__pb2.ListSongsResponse.FromString,
                )
        self.ListPlaylists = channel.unary_unary(
                '/commandserver.MediaControlService/ListPlaylists',
                request_serializer=mediarpc_dot_media__server__pb2.ListPlaylistsRequest.SerializeToString,
                response_deserializer=mediarpc_dot_media__server__pb2.ListPlaylistsResponse.FromString,
                )
        self.SetOracle = channel.unary_unary(
                '/commandserver.MediaControlService/SetOracle',
                request_serializer=mediarpc_dot_media__server__pb2.SetOracleRequest.SerializeToString,
                response_deserializer=mediarpc_dot_media__server__pb2.SetOracleResponse.FromString,
                )
        self.OracleUpdate = channel.unary_unary(
                '/commandserver.MediaControlService/OracleUpdate',
                request_serializer=mediarpc_dot_media__server__pb2.OracleUpdateRequest.SerializeToString,
                response_deserializer=mediarpc_dot_media__server__pb2.OracleUpdateResponse.FromString,
                )


class MediaControlServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Play(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pause(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NextSong(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSongs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlaylists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOracle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OracleUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MediaControlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Play': grpc.unary_unary_rpc_method_handler(
                    servicer.Play,
                    request_deserializer=mediarpc_dot_media__server__pb2.PlayRequest.FromString,
                    response_serializer=mediarpc_dot_media__server__pb2.PlayResponse.SerializeToString,
            ),
            'Pause': grpc.unary_unary_rpc_method_handler(
                    servicer.Pause,
                    request_deserializer=mediarpc_dot_media__server__pb2.PauseRequest.FromString,
                    response_serializer=mediarpc_dot_media__server__pb2.PauseResponse.SerializeToString,
            ),
            'NextSong': grpc.unary_unary_rpc_method_handler(
                    servicer.NextSong,
                    request_deserializer=mediarpc_dot_media__server__pb2.NextSongRequest.FromString,
                    response_serializer=mediarpc_dot_media__server__pb2.NextSongResponse.SerializeToString,
            ),
            'ListSongs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSongs,
                    request_deserializer=mediarpc_dot_media__server__pb2.ListSongsRequest.FromString,
                    response_serializer=mediarpc_dot_media__server__pb2.ListSongsResponse.SerializeToString,
            ),
            'ListPlaylists': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlaylists,
                    request_deserializer=mediarpc_dot_media__server__pb2.ListPlaylistsRequest.FromString,
                    response_serializer=mediarpc_dot_media__server__pb2.ListPlaylistsResponse.SerializeToString,
            ),
            'SetOracle': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOracle,
                    request_deserializer=mediarpc_dot_media__server__pb2.SetOracleRequest.FromString,
                    response_serializer=mediarpc_dot_media__server__pb2.SetOracleResponse.SerializeToString,
            ),
            'OracleUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.OracleUpdate,
                    request_deserializer=mediarpc_dot_media__server__pb2.OracleUpdateRequest.FromString,
                    response_serializer=mediarpc_dot_media__server__pb2.OracleUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'commandserver.MediaControlService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MediaControlService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Play(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/commandserver.MediaControlService/Play',
            mediarpc_dot_media__server__pb2.PlayRequest.SerializeToString,
            mediarpc_dot_media__server__pb2.PlayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pause(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/commandserver.MediaControlService/Pause',
            mediarpc_dot_media__server__pb2.PauseRequest.SerializeToString,
            mediarpc_dot_media__server__pb2.PauseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NextSong(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/commandserver.MediaControlService/NextSong',
            mediarpc_dot_media__server__pb2.NextSongRequest.SerializeToString,
            mediarpc_dot_media__server__pb2.NextSongResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSongs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/commandserver.MediaControlService/ListSongs',
            mediarpc_dot_media__server__pb2.ListSongsRequest.SerializeToString,
            mediarpc_dot_media__server__pb2.ListSongsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPlaylists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/commandserver.MediaControlService/ListPlaylists',
            mediarpc_dot_media__server__pb2.ListPlaylistsRequest.SerializeToString,
            mediarpc_dot_media__server__pb2.ListPlaylistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetOracle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/commandserver.MediaControlService/SetOracle',
            mediarpc_dot_media__server__pb2.SetOracleRequest.SerializeToString,
            mediarpc_dot_media__server__pb2.SetOracleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OracleUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/commandserver.MediaControlService/OracleUpdate',
            mediarpc_dot_media__server__pb2.OracleUpdateRequest.SerializeToString,
            mediarpc_dot_media__server__pb2.OracleUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
